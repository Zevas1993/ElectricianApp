{
  "formatVersion": 1,
  "database": {
    "version": 2,
    "identityHash": "e4b98cc8303fd751cfe7d4118c94bc19",
    "entities": [
      {
        "tableName": "box_fill_inputs",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `timestamp` INTEGER NOT NULL, `boxType` TEXT NOT NULL, `boxDimensions` TEXT NOT NULL, `boxVolumeInCubicInches` REAL NOT NULL, `componentsJson` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "boxType",
            "columnName": "boxType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "boxDimensions",
            "columnName": "boxDimensions",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "boxVolumeInCubicInches",
            "columnName": "boxVolumeInCubicInches",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "componentsJson",
            "columnName": "componentsJson",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "box_fill_results",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `inputId` INTEGER NOT NULL, `boxType` TEXT NOT NULL, `boxDimensions` TEXT NOT NULL, `boxVolumeInCubicInches` REAL NOT NULL, `totalRequiredVolumeInCubicInches` REAL NOT NULL, `remainingVolumeInCubicInches` REAL NOT NULL, `fillPercentage` REAL NOT NULL, `isWithinLimits` INTEGER NOT NULL, `componentDetailsJson` TEXT NOT NULL, FOREIGN KEY(`inputId`) REFERENCES `box_fill_inputs`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "inputId",
            "columnName": "inputId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "boxType",
            "columnName": "boxType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "boxDimensions",
            "columnName": "boxDimensions",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "boxVolumeInCubicInches",
            "columnName": "boxVolumeInCubicInches",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalRequiredVolumeInCubicInches",
            "columnName": "totalRequiredVolumeInCubicInches",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "remainingVolumeInCubicInches",
            "columnName": "remainingVolumeInCubicInches",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "fillPercentage",
            "columnName": "fillPercentage",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "isWithinLimits",
            "columnName": "isWithinLimits",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "componentDetailsJson",
            "columnName": "componentDetailsJson",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_box_fill_results_inputId",
            "unique": false,
            "columnNames": [
              "inputId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_box_fill_results_inputId` ON `${TABLE_NAME}` (`inputId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "box_fill_inputs",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "inputId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "conduit_fill_calculations",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `timestamp` INTEGER NOT NULL, `conduitType` TEXT NOT NULL, `conduitSize` TEXT NOT NULL, `wires` TEXT NOT NULL, `conduitAreaInSqInches` REAL NOT NULL, `totalWireAreaInSqInches` REAL NOT NULL, `fillPercentage` REAL NOT NULL, `maximumAllowedFillPercentage` REAL NOT NULL, `isWithinLimits` INTEGER NOT NULL, `wireDetails` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "conduitType",
            "columnName": "conduitType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "conduitSize",
            "columnName": "conduitSize",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "wires",
            "columnName": "wires",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "conduitAreaInSqInches",
            "columnName": "conduitAreaInSqInches",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalWireAreaInSqInches",
            "columnName": "totalWireAreaInSqInches",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "fillPercentage",
            "columnName": "fillPercentage",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "maximumAllowedFillPercentage",
            "columnName": "maximumAllowedFillPercentage",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "isWithinLimits",
            "columnName": "isWithinLimits",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "wireDetails",
            "columnName": "wireDetails",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "dwelling_load_calculations",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `calculationName` TEXT NOT NULL, `timestamp` INTEGER NOT NULL, `dwellingType` TEXT NOT NULL, `squareFootage` REAL NOT NULL, `smallApplianceCircuits` INTEGER NOT NULL, `laundryCircuits` INTEGER NOT NULL, `appliances` TEXT NOT NULL, `totalConnectedLoad` REAL NOT NULL, `totalDemandLoad` REAL NOT NULL, `serviceSize` INTEGER NOT NULL, `generalLightingLoad` REAL NOT NULL, `smallApplianceLoad` REAL NOT NULL, `laundryLoad` REAL NOT NULL, `applianceLoads` TEXT NOT NULL, `demandFactors` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "calculationName",
            "columnName": "calculationName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dwellingType",
            "columnName": "dwellingType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "squareFootage",
            "columnName": "squareFootage",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "smallApplianceCircuits",
            "columnName": "smallApplianceCircuits",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "laundryCircuits",
            "columnName": "laundryCircuits",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "appliances",
            "columnName": "appliances",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "totalConnectedLoad",
            "columnName": "totalConnectedLoad",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalDemandLoad",
            "columnName": "totalDemandLoad",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "serviceSize",
            "columnName": "serviceSize",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "generalLightingLoad",
            "columnName": "generalLightingLoad",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "smallApplianceLoad",
            "columnName": "smallApplianceLoad",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "laundryLoad",
            "columnName": "laundryLoad",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "applianceLoads",
            "columnName": "applianceLoads",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "demandFactors",
            "columnName": "demandFactors",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "jobs",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `userId` INTEGER NOT NULL, `name` TEXT NOT NULL, `address` TEXT NOT NULL, `description` TEXT, `status` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "address",
            "columnName": "address",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "voltage_drop_calculations",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `systemType` TEXT NOT NULL, `conductorType` TEXT NOT NULL, `conduitMaterial` TEXT NOT NULL, `temperatureRating` TEXT NOT NULL, `wireSize` TEXT NOT NULL, `lengthInFeet` REAL NOT NULL, `loadInAmps` REAL NOT NULL, `voltageInVolts` REAL NOT NULL, `powerFactor` REAL NOT NULL, `voltageDropInVolts` REAL NOT NULL, `voltageDropPercentage` REAL NOT NULL, `conductorResistance` REAL NOT NULL, `conductorReactance` REAL NOT NULL, `impedance` REAL NOT NULL, `isWithinRecommendedLimits` INTEGER NOT NULL, `recommendedLimit` REAL NOT NULL, `endVoltage` REAL NOT NULL, `timestamp` INTEGER NOT NULL, `notes` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "systemType",
            "columnName": "systemType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "conductorType",
            "columnName": "conductorType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "conduitMaterial",
            "columnName": "conduitMaterial",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "temperatureRating",
            "columnName": "temperatureRating",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "wireSize",
            "columnName": "wireSize",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lengthInFeet",
            "columnName": "lengthInFeet",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "loadInAmps",
            "columnName": "loadInAmps",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "voltageInVolts",
            "columnName": "voltageInVolts",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "powerFactor",
            "columnName": "powerFactor",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "voltageDropInVolts",
            "columnName": "voltageDropInVolts",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "voltageDropPercentage",
            "columnName": "voltageDropPercentage",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "conductorResistance",
            "columnName": "conductorResistance",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "conductorReactance",
            "columnName": "conductorReactance",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "impedance",
            "columnName": "impedance",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "isWithinRecommendedLimits",
            "columnName": "isWithinRecommendedLimits",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "recommendedLimit",
            "columnName": "recommendedLimit",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "endVoltage",
            "columnName": "endVoltage",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "nec_articles",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `articleNumber` TEXT NOT NULL, `title` TEXT NOT NULL, `content` TEXT NOT NULL, `summary` TEXT NOT NULL, `category` TEXT NOT NULL, `tagsJson` TEXT NOT NULL, `relatedArticlesJson` TEXT NOT NULL, `year` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "articleNumber",
            "columnName": "articleNumber",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "content",
            "columnName": "content",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "summary",
            "columnName": "summary",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "category",
            "columnName": "category",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "tagsJson",
            "columnName": "tagsJson",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "relatedArticlesJson",
            "columnName": "relatedArticlesJson",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "year",
            "columnName": "year",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_nec_articles_articleNumber_year",
            "unique": true,
            "columnNames": [
              "articleNumber",
              "year"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_nec_articles_articleNumber_year` ON `${TABLE_NAME}` (`articleNumber`, `year`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "nec_updates",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `articleNumber` TEXT NOT NULL, `previousEdition` INTEGER NOT NULL, `currentEdition` INTEGER NOT NULL, `changeDescription` TEXT NOT NULL, `impactLevel` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "articleNumber",
            "columnName": "articleNumber",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "previousEdition",
            "columnName": "previousEdition",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "currentEdition",
            "columnName": "currentEdition",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "changeDescription",
            "columnName": "changeDescription",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "impactLevel",
            "columnName": "impactLevel",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_nec_updates_articleNumber_previousEdition_currentEdition",
            "unique": true,
            "columnNames": [
              "articleNumber",
              "previousEdition",
              "currentEdition"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_nec_updates_articleNumber_previousEdition_currentEdition` ON `${TABLE_NAME}` (`articleNumber`, `previousEdition`, `currentEdition`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "nec_bookmarks",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `articleId` INTEGER NOT NULL, `notes` TEXT NOT NULL, `dateAdded` INTEGER NOT NULL, `isFavorite` INTEGER NOT NULL, FOREIGN KEY(`articleId`) REFERENCES `nec_articles`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "articleId",
            "columnName": "articleId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "dateAdded",
            "columnName": "dateAdded",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isFavorite",
            "columnName": "isFavorite",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_nec_bookmarks_articleId",
            "unique": false,
            "columnNames": [
              "articleId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_nec_bookmarks_articleId` ON `${TABLE_NAME}` (`articleId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "nec_articles",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "articleId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "code_violation_checks",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `articleNumber` TEXT NOT NULL, `checkDescription` TEXT NOT NULL, `parametersJson` TEXT NOT NULL, `checkLogic` TEXT NOT NULL, `explanationTemplate` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "articleNumber",
            "columnName": "articleNumber",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "checkDescription",
            "columnName": "checkDescription",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "parametersJson",
            "columnName": "parametersJson",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "checkLogic",
            "columnName": "checkLogic",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "explanationTemplate",
            "columnName": "explanationTemplate",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "photo_documents",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `jobId` INTEGER, `title` TEXT NOT NULL, `description` TEXT NOT NULL, `photoUri` TEXT NOT NULL, `thumbnailUri` TEXT, `dateCreated` INTEGER NOT NULL, `latitude` REAL, `longitude` REAL, `address` TEXT, `tagsJson` TEXT NOT NULL, `beforeAfterPairId` INTEGER, FOREIGN KEY(`jobId`) REFERENCES `jobs`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "jobId",
            "columnName": "jobId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "photoUri",
            "columnName": "photoUri",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "thumbnailUri",
            "columnName": "thumbnailUri",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "dateCreated",
            "columnName": "dateCreated",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "latitude",
            "columnName": "latitude",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "longitude",
            "columnName": "longitude",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "address",
            "columnName": "address",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tagsJson",
            "columnName": "tagsJson",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "beforeAfterPairId",
            "columnName": "beforeAfterPairId",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_photo_documents_jobId",
            "unique": false,
            "columnNames": [
              "jobId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_photo_documents_jobId` ON `${TABLE_NAME}` (`jobId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "jobs",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "jobId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "photo_annotations",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `photoId` INTEGER NOT NULL, `type` TEXT NOT NULL, `x` REAL NOT NULL, `y` REAL NOT NULL, `width` REAL, `height` REAL, `text` TEXT NOT NULL, `color` INTEGER NOT NULL, FOREIGN KEY(`photoId`) REFERENCES `photo_documents`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "photoId",
            "columnName": "photoId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "x",
            "columnName": "x",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "y",
            "columnName": "y",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "width",
            "columnName": "width",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "height",
            "columnName": "height",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "text",
            "columnName": "text",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "color",
            "columnName": "color",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_photo_annotations_photoId",
            "unique": false,
            "columnNames": [
              "photoId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_photo_annotations_photoId` ON `${TABLE_NAME}` (`photoId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "photo_documents",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "photoId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "before_after_pairs",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `beforePhotoId` INTEGER NOT NULL, `afterPhotoId` INTEGER NOT NULL, `title` TEXT NOT NULL, `description` TEXT NOT NULL, FOREIGN KEY(`beforePhotoId`) REFERENCES `photo_documents`(`id`) ON UPDATE CASCADE ON DELETE CASCADE , FOREIGN KEY(`afterPhotoId`) REFERENCES `photo_documents`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "beforePhotoId",
            "columnName": "beforePhotoId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "afterPhotoId",
            "columnName": "afterPhotoId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_before_after_pairs_beforePhotoId",
            "unique": false,
            "columnNames": [
              "beforePhotoId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_before_after_pairs_beforePhotoId` ON `${TABLE_NAME}` (`beforePhotoId`)"
          },
          {
            "name": "index_before_after_pairs_afterPhotoId",
            "unique": false,
            "columnNames": [
              "afterPhotoId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_before_after_pairs_afterPhotoId` ON `${TABLE_NAME}` (`afterPhotoId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "photo_documents",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "beforePhotoId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "photo_documents",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "afterPhotoId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "materials",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `name` TEXT NOT NULL, `description` TEXT NOT NULL, `category` TEXT NOT NULL, `partNumber` TEXT NOT NULL, `manufacturer` TEXT NOT NULL, `unitOfMeasure` TEXT NOT NULL, `unitPrice` REAL NOT NULL, `imageUrl` TEXT, `tagsJson` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "category",
            "columnName": "category",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "partNumber",
            "columnName": "partNumber",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "manufacturer",
            "columnName": "manufacturer",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "unitOfMeasure",
            "columnName": "unitOfMeasure",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "unitPrice",
            "columnName": "unitPrice",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "imageUrl",
            "columnName": "imageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tagsJson",
            "columnName": "tagsJson",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "material_lists",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `jobId` TEXT, `name` TEXT NOT NULL, `description` TEXT NOT NULL, `createdDate` INTEGER NOT NULL, `modifiedDate` INTEGER NOT NULL, `status` TEXT NOT NULL, `tagsJson` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "jobId",
            "columnName": "jobId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdDate",
            "columnName": "createdDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "modifiedDate",
            "columnName": "modifiedDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "tagsJson",
            "columnName": "tagsJson",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_material_lists_jobId",
            "unique": false,
            "columnNames": [
              "jobId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_material_lists_jobId` ON `${TABLE_NAME}` (`jobId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "material_list_items",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `materialListId` TEXT NOT NULL, `materialId` TEXT NOT NULL, `quantity` REAL NOT NULL, `notes` TEXT NOT NULL, `status` TEXT NOT NULL, `allocatedQuantity` REAL NOT NULL, `usedQuantity` REAL NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`materialListId`) REFERENCES `material_lists`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`materialId`) REFERENCES `materials`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "materialListId",
            "columnName": "materialListId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "materialId",
            "columnName": "materialId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "quantity",
            "columnName": "quantity",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "allocatedQuantity",
            "columnName": "allocatedQuantity",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "usedQuantity",
            "columnName": "usedQuantity",
            "affinity": "REAL",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_material_list_items_materialListId",
            "unique": false,
            "columnNames": [
              "materialListId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_material_list_items_materialListId` ON `${TABLE_NAME}` (`materialListId`)"
          },
          {
            "name": "index_material_list_items_materialId",
            "unique": false,
            "columnNames": [
              "materialId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_material_list_items_materialId` ON `${TABLE_NAME}` (`materialId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "material_lists",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "materialListId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "materials",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "materialId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "suppliers",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `name` TEXT NOT NULL, `contactName` TEXT NOT NULL, `phone` TEXT NOT NULL, `email` TEXT NOT NULL, `website` TEXT NOT NULL, `address` TEXT NOT NULL, `notes` TEXT NOT NULL, `preferredCategoriesJson` TEXT NOT NULL, `isPreferred` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "contactName",
            "columnName": "contactName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "phone",
            "columnName": "phone",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "website",
            "columnName": "website",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "address",
            "columnName": "address",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "preferredCategoriesJson",
            "columnName": "preferredCategoriesJson",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isPreferred",
            "columnName": "isPreferred",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "material_quotes",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `materialId` TEXT NOT NULL, `supplierId` TEXT NOT NULL, `price` REAL NOT NULL, `minimumQuantity` REAL NOT NULL, `availableQuantity` REAL, `leadTimeInDays` INTEGER, `quoteDate` INTEGER NOT NULL, `expirationDate` INTEGER, `notes` TEXT NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`materialId`) REFERENCES `materials`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`supplierId`) REFERENCES `suppliers`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "materialId",
            "columnName": "materialId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "supplierId",
            "columnName": "supplierId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "price",
            "columnName": "price",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "minimumQuantity",
            "columnName": "minimumQuantity",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "availableQuantity",
            "columnName": "availableQuantity",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "leadTimeInDays",
            "columnName": "leadTimeInDays",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "quoteDate",
            "columnName": "quoteDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "expirationDate",
            "columnName": "expirationDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_material_quotes_materialId",
            "unique": false,
            "columnNames": [
              "materialId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_material_quotes_materialId` ON `${TABLE_NAME}` (`materialId`)"
          },
          {
            "name": "index_material_quotes_supplierId",
            "unique": false,
            "columnNames": [
              "supplierId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_material_quotes_supplierId` ON `${TABLE_NAME}` (`supplierId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "materials",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "materialId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "suppliers",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "supplierId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "material_inventory",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `materialId` TEXT NOT NULL, `quantity` REAL NOT NULL, `location` TEXT NOT NULL, `lastUpdated` INTEGER NOT NULL, `minimumQuantity` REAL NOT NULL, `notes` TEXT NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`materialId`) REFERENCES `materials`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "materialId",
            "columnName": "materialId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "quantity",
            "columnName": "quantity",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "location",
            "columnName": "location",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastUpdated",
            "columnName": "lastUpdated",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "minimumQuantity",
            "columnName": "minimumQuantity",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_material_inventory_materialId",
            "unique": false,
            "columnNames": [
              "materialId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_material_inventory_materialId` ON `${TABLE_NAME}` (`materialId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "materials",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "materialId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "material_transactions",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `materialId` TEXT NOT NULL, `jobId` TEXT, `materialListId` TEXT, `quantity` REAL NOT NULL, `transactionType` TEXT NOT NULL, `date` INTEGER NOT NULL, `performedBy` TEXT NOT NULL, `notes` TEXT NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`materialId`) REFERENCES `materials`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "materialId",
            "columnName": "materialId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "jobId",
            "columnName": "jobId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "materialListId",
            "columnName": "materialListId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "quantity",
            "columnName": "quantity",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "transactionType",
            "columnName": "transactionType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "date",
            "columnName": "date",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "performedBy",
            "columnName": "performedBy",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_material_transactions_materialId",
            "unique": false,
            "columnNames": [
              "materialId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_material_transactions_materialId` ON `${TABLE_NAME}` (`materialId`)"
          },
          {
            "name": "index_material_transactions_jobId",
            "unique": false,
            "columnNames": [
              "jobId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_material_transactions_jobId` ON `${TABLE_NAME}` (`jobId`)"
          },
          {
            "name": "index_material_transactions_materialListId",
            "unique": false,
            "columnNames": [
              "materialListId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_material_transactions_materialListId` ON `${TABLE_NAME}` (`materialListId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "materials",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "materialId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "material_packages",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `name` TEXT NOT NULL, `description` TEXT NOT NULL, `category` TEXT NOT NULL, `tagsJson` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "category",
            "columnName": "category",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "tagsJson",
            "columnName": "tagsJson",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "material_package_items",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `packageId` TEXT NOT NULL, `materialId` TEXT NOT NULL, `quantity` REAL NOT NULL, `notes` TEXT NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`packageId`) REFERENCES `material_packages`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`materialId`) REFERENCES `materials`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "packageId",
            "columnName": "packageId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "materialId",
            "columnName": "materialId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "quantity",
            "columnName": "quantity",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_material_package_items_packageId",
            "unique": false,
            "columnNames": [
              "packageId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_material_package_items_packageId` ON `${TABLE_NAME}` (`packageId`)"
          },
          {
            "name": "index_material_package_items_materialId",
            "unique": false,
            "columnNames": [
              "materialId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_material_package_items_materialId` ON `${TABLE_NAME}` (`materialId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "material_packages",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "packageId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "materials",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "materialId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'e4b98cc8303fd751cfe7d4118c94bc19')"
    ]
  }
}